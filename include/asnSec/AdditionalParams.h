/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "EeRaInterfacePdu"
 * 	found in "EeRaInterfacePdu.asn"
 * 	`asn1c -fcompound-names`
 */

#ifndef	_AdditionalParams_H_
#define	_AdditionalParams_H_


#include <asn_application.h>

/* Including external dependencies */
#include "ButterflyParamsOriginal.h"
#include "ButterflyExpansion.h"
#include "PublicEncryptionKey.h"
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum AdditionalParams_PR {
	AdditionalParams_PR_NOTHING,	/* No components present */
	AdditionalParams_PR_original,
	AdditionalParams_PR_unified,
	AdditionalParams_PR_compactUnified,
	AdditionalParams_PR_encryptionKey
	/* Extensions may appear below */
	
} AdditionalParams_PR;

/* AdditionalParams */
typedef struct AdditionalParams {
	AdditionalParams_PR present;
	union AdditionalParams_u {
		ButterflyParamsOriginal_t	 original;
		ButterflyExpansion_t	 unified;
		ButterflyExpansion_t	 compactUnified;
		PublicEncryptionKey_t	 encryptionKey;
		/*
		 * This type is extensible,
		 * possible extensions are below.
		 */
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} AdditionalParams_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_AdditionalParams;
extern asn_CHOICE_specifics_t asn_SPC_AdditionalParams_specs_1;
extern asn_TYPE_member_t asn_MBR_AdditionalParams_1[4];
extern asn_per_constraints_t asn_PER_type_AdditionalParams_constr_1;

#ifdef __cplusplus
}
#endif

#endif	/* _AdditionalParams_H_ */
#include <asn_internal.h>
